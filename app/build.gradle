buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // Check here for new versions: https://s3.amazonaws.com/fabric-artifacts/public/io/fabric/tools/gradle/maven-metadata.xml
        classpath 'io.fabric.tools:gradle:1.21.5'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'com.jakewharton.hugo'
apply from: '../code-quality/quality.gradle'

repositories {
    jcenter()
    maven { url "https://clojars.org/repo/" }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

// The file fabric.properties contains a secret Fabric api key, so it's not stored in the repository.
// But this field is required for building the project, so create it from the FABRIC_LORI_API_SECRET environment variable.
def fabricProperties = file('fabric.properties')
if (!fabricProperties.exists()) {
    fabricProperties.text = "#Generated from gradle\r\n" +
            "apiSecret=$System.env.FABRIC_LORI_API_SECRET"
}

frodo {
    enabled = true
}

android {
    signingConfigs {
        config {
            // For a real app hide the keystore file and credentials.
            storeFile file('keystore.jks')
            storePassword 'lori-app'
            keyAlias 'lori-app'
            keyPassword 'lori-app'
        }
    }
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    def STRING = "String"

    def DEFAULT_LOGIN = 'DEFAULT_LOGIN'
    def DEFAULT_LOGIN_VALUE = '\"admin\"'

    def DEFAULT_PASSWORD = 'DEFAULT_PASSWORD'
    def DEFAULT_PASSWORD_VALUE = '\"admin\"'

    def DEFAULT_SERVER_URL = 'DEFAULT_SERVER_URL'
    // Local address value'\"http://192.168.1.7:8080/app/dispatch/api/\"'
    def DEFAULT_SERVER_URL_VALUE = '\"http://lori-server.herokuapp.com/app/dispatch/api/\"'

    defaultConfig {
        buildConfigField STRING, DEFAULT_LOGIN, DEFAULT_LOGIN_VALUE
        buildConfigField STRING, DEFAULT_PASSWORD, DEFAULT_PASSWORD_VALUE
        buildConfigField STRING, DEFAULT_SERVER_URL, DEFAULT_SERVER_URL_VALUE

        applicationId "com.lori"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "com.lori.base.TestInstrumentationRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles file('proguard-files').listFiles()
            signingConfig signingConfigs.config
            debuggable true
            testCoverageEnabled true
        }

        debug {
            applicationIdSuffix '.debug'
            testCoverageEnabled true
        }
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }

    lintOptions {
        textReport true
        warningsAsErrors false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    def robolectricVersion = '3.1.4'
    testCompile "org.robolectric:robolectric:$robolectricVersion"
    testCompile "org.robolectric:shadows-multidex:$robolectricVersion"

    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'

    // MVP.
    def nucleusVersion = '4.0.0'
    compile "info.android15.nucleus:nucleus:$nucleusVersion"
    compile "info.android15.nucleus:nucleus-support-v4:$nucleusVersion"
    compile "info.android15.nucleus:nucleus-support-v7:$nucleusVersion"

    // Networking.
    def retrofitVersion = '2.1.0'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'

    compile 'io.reactivex:rxjava:1.2.0'
    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'

    def icepickVersion = '3.2.0'
    compile "frankiesardo:icepick:$icepickVersion"
    apt "frankiesardo:icepick-processor:$icepickVersion"

    def daggerVersion = '2.8'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"
    testApt "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestApt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile 'org.greenrobot:eventbus:3.0.0'

    // For a smarter bottom shit dialog that the support library has.
    compile 'com.github.rey5137:material:1.2.4'

    compile 'com.balysv:material-ripple:1.0.2'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.google.guava:guava:19.0'

    compile 'com.android.support:multidex:1.0.1'

    def lombokVersion = '1.16.10'
    provided "org.projectlombok:lombok:$lombokVersion"
    apt "org.projectlombok:lombok:$lombokVersion"

    testCompile 'org.mockito:mockito-core:2.2.22'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile 'com.android.support:support-annotations:24.2.1'

    androidTestCompile('com.squareup.okhttp3:mockwebserver:3.4.2') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'com.squareup.okio', module: 'okio'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
}