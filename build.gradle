// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        classpath 'me.tatarka:gradle-retrolambda:3.4.0'

        // For retrolambda to work good with proguard.
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'

        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.fernandocejas.frodo:frodo-plugin:0.8.3'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    // This line is required by lombok.ast:0.2.3.a2
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

ext.preDexLibs = !project.hasProperty('disablePreDex')

allprojects {
    repositories {
        jcenter()
    }

    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name) || "com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            if (!rootProject.ext.preDexLibs) {
                println "Disable pre dexing for module ${project.name}"
            }
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

subprojects {
    afterEvaluate {
        tasks.findByName('pmd').dependsOn('assemble', 'assembleDebugUnitTest')
        tasks.findByName('findbugs').dependsOn('assemble', 'assembleDebugUnitTest')

        def checkTask = tasks.findByName('check')

        /*checkTask.dependsOn('pmd')
        checkTask.dependsOn('findbugs')
        checkTask.dependsOn('checkstyle')*/
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
